# Workflow to run static-analysis and linting checks on source
name: StaticAnalysis

# Controls when the workflow will run
on:
  # Triggers the workflow on pushes to the "main" branch, i.e., PR merges
  push:
    branches: [ "main" ]

  # Triggers the workflow on pushes to open pull requests with code changes
  pull_request:
    paths:
      - '.github/workflows/*.yml'
      - '**.f90'
      - '**.F90'
      - '**.py'
      - '**CMakeLists.txt'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Workflow run - one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "static-analysis"
  static-analysis:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        with:
          persist-credentials: false
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv ftorch_venv
          . ftorch_venv/bin/activate
          pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
          pip install -r requirements_dev.txt

      # Apply CMake linter, cmake-lint
      - name: cmake-lint
        if: always()
        run: |
          cd ${{ github.workspace }}
          . ftorch_venv/bin/activate
          cmake-lint $(find . -name CMakeLists.txt)

      # Apply GitHub Actions linter, zizmor
      - name: zizmor
        if: always()
        run: |
          cd ${{ github.workspace }}
          . ftorch_venv/bin/activate
          zizmor .github/workflows/*.yml

      # Apply Fortran linter, fortitude
      # Configurable using the fortitude.toml file if present
      - name: fortitude source
        if: always()
        run: |
          cd ${{ github.workspace }}
          . ftorch_venv/bin/activate
          fortitude check ./

      # Apply Python linter, ruff
      - name: ruff
        if: always()
        run: |
          cd ${{ github.workspace }}
          . ftorch_venv/bin/activate
          ruff format --diff ./
          ruff check --diff ./
